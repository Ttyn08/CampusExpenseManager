// Generated by view binder compiler. Do not edit!
package com.example.campusexpensemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.campusexpensemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomsheetlayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addExpenses;

  @NonNull
  public final ImageView cancelButton;

  @NonNull
  public final TextView createText;

  @NonNull
  public final LinearLayout layoutBudget;

  @NonNull
  public final LinearLayout layoutExpense;

  private BottomsheetlayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView addExpenses,
      @NonNull ImageView cancelButton, @NonNull TextView createText,
      @NonNull LinearLayout layoutBudget, @NonNull LinearLayout layoutExpense) {
    this.rootView = rootView;
    this.addExpenses = addExpenses;
    this.cancelButton = cancelButton;
    this.createText = createText;
    this.layoutBudget = layoutBudget;
    this.layoutExpense = layoutExpense;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomsheetlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomsheetlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottomsheetlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomsheetlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addExpenses;
      TextView addExpenses = ViewBindings.findChildViewById(rootView, id);
      if (addExpenses == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      ImageView cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.createText;
      TextView createText = ViewBindings.findChildViewById(rootView, id);
      if (createText == null) {
        break missingId;
      }

      id = R.id.layoutBudget;
      LinearLayout layoutBudget = ViewBindings.findChildViewById(rootView, id);
      if (layoutBudget == null) {
        break missingId;
      }

      id = R.id.layoutExpense;
      LinearLayout layoutExpense = ViewBindings.findChildViewById(rootView, id);
      if (layoutExpense == null) {
        break missingId;
      }

      return new BottomsheetlayoutBinding((LinearLayout) rootView, addExpenses, cancelButton,
          createText, layoutBudget, layoutExpense);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
