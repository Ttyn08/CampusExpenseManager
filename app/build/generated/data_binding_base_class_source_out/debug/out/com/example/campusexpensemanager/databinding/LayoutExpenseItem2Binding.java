// Generated by view binder compiler. Do not edit!
package com.example.campusexpensemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.campusexpensemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutExpenseItem2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView tvExpenseAmount;

  @NonNull
  public final TextView tvExpenseDate;

  @NonNull
  public final TextView tvExpenseName;

  @NonNull
  public final TextView tvExpenseNote;

  private LayoutExpenseItem2Binding(@NonNull RelativeLayout rootView,
      @NonNull TextView tvExpenseAmount, @NonNull TextView tvExpenseDate,
      @NonNull TextView tvExpenseName, @NonNull TextView tvExpenseNote) {
    this.rootView = rootView;
    this.tvExpenseAmount = tvExpenseAmount;
    this.tvExpenseDate = tvExpenseDate;
    this.tvExpenseName = tvExpenseName;
    this.tvExpenseNote = tvExpenseNote;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutExpenseItem2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutExpenseItem2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_expense_item2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutExpenseItem2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_expenseAmount;
      TextView tvExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseAmount == null) {
        break missingId;
      }

      id = R.id.tv_expenseDate;
      TextView tvExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseDate == null) {
        break missingId;
      }

      id = R.id.tv_expenseName;
      TextView tvExpenseName = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseName == null) {
        break missingId;
      }

      id = R.id.tv_expenseNote;
      TextView tvExpenseNote = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseNote == null) {
        break missingId;
      }

      return new LayoutExpenseItem2Binding((RelativeLayout) rootView, tvExpenseAmount,
          tvExpenseDate, tvExpenseName, tvExpenseNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
